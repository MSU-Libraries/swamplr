[source]
source_options = PDF,TIF,JPG,WAV

[source.tif]
derive_options = jpeg_high,jpeg_low,jpeg,jpeg_resize_scaled,new_tif,thumbnail,preview,jp2,fits

[derive.tif.jpeg_high]
command = convert {input_file} -flatten -units pixelsperinch -density 300 -resize 3000 -brightness-contrast {brightness}x{contrast} {output_file}
output_file = {0}_HIGH.jpg
label = High Quality JPEG

[derive.tif.jpeg_low]
command = convert {input_file} -flatten -units pixelsperinch -density 72 -resize 2000 -brightness-contrast {brightness}x{contrast} {output_file}
output_file = {0}_LOW.jpg
label = Low Quality JPEG

[derive.tif.jpeg]
command = convert {input_file} -flatten -brightness-contrast {brightness}x{contrast} {output_file}
output_file = {0}.jpg
label = Default JPEG

[derive.tif.jpeg_resize_scaled]
command = convert {input_file} -flatten -resize 50%  -brightness-contrast {brightness}x{contrast}  {output_file}
output_file = {0}_RESCALE.jpg
label = Reduced by 50% JPEG

[derive.tif.new_tif]
command = convert {input_file}  -brightness-contrast {brightness}x{contrast} {output_file}
output_file = {0}_NEW.tif
label = New TIF

[derive.tif.thumbnail]
command = convert {input_file} -flatten -quality 75 -resize 200x200 -brightness-contrast {brightness}x{contrast}  {output_file}
output_file = {0}_TN.jpg
label = Thumbnail Image

[derive.tif.preview]
command = convert {input_file} -flatten -quality 75 -resize 6500x650 -brightness-contrast {brightness}x{contrast}  {output_file}
output_file = {0}_PREVIEW.jpg
label = Preview Image

[derive.tif.jp2]
command = convert {input_file} -quiet -flatten -define numrlvls=7 -define jp2:tilewidth=1024 -define jp2:tileheight=1024 -define jp2:lazy -define jp2:rate=1 -define jp2:prg=rlcp -define jp2:ilyrrates='0.015625,0.01858,0.0221,0.025,0.03125,0.03716,0.04419,0.05,0.0625,0.075,0.088,0.1,0.125,0.15,0.18,0.21,0.25,0.3,0.35,0.4,0.5,0.6,0.7,0.84' -define jp2:mode=int -brightness-contrast {brightness}x{contrast}  {output_file}
output_file = {0}_JP2.jp2
label = JPEG2000 Image

[derive.tif.fits]
step.1.command = /var/local/fits-1.2.0/fits.sh -i {input_file} -xc -o {output_file}
step.1.join = or
step.2.command = /var/local/fits-1.2.0/fits.sh -i {input_file} -x -o {output_file}
output_file = {0}.xml
label = FITS Technical Metadata

[source.jpg]
derive_options = jpeg_high,jpeg_low,jpeg_resize_scaled,new_tif,thumbnail,preview,jp2,fits

[derive.jpg.jpeg_high]
command = convert {input_file} -flatten -units pixelsperinch -density 300 -resize 3000 -brightness-contrast {brightness}x{contrast} {output_file}
output_file = {0}_HIGH.jpg
label = High Quality JPEG

[derive.jpg.jpeg_low]
command = convert {input_file} -flatten -units pixelsperinch -density 72 -resize 2000 -brightness-contrast {brightness}x{contrast} {output_file}
output_file = {0}_LOW.jpg
label = Low Quality JPEG

[derive.jpg.jpeg_resize_scaled]
command = convert {input_file} -flatten -resize 50%  -brightness-contrast {brightness}x{contrast}  {output_file}
output_file = {0}_RESCALE.jpg
label = Reduced by 50% JPEG

[derive.jpg.new_tif]
command = convert {input_file}  -brightness-contrast {brightness}x{contrast} {output_file}
output_file = {0}_NEW.tif
label = New TIF

[derive.jpg.thumbnail]
command = convert {input_file} -flatten -quality 75 -resize 200x200 -brightness-contrast {brightness}x{contrast}  {output_file}
output_file = {0}_TN.jpg
label = Thumbnail Image

[derive.jpg.preview]
command = convert {input_file} -flatten -quality 75 -resize 6500x650 -brightness-contrast {brightness}x{contrast}  {output_file}
output_file = {0}_PREVIEW.jpg
label = Preview Image

[derive.jpg.jp2]
command = convert {input_file} -quiet -flatten -define numrlvls=7 -define jp2:tilewidth=1024 -define jp2:tileheight=1024 -define jp2:lazy -define jp2:rate=1 -define jp2:prg=rlcp -define jp2:ilyrrates='0.015625,0.01858,0.0221,0.025,0.03125,0.03716,0.04419,0.05,0.0625,0.075,0.088,0.1,0.125,0.15,0.18,0.21,0.25,0.3,0.35,0.4,0.5,0.6,0.7,0.84' -define jp2:mode=int -brightness-contrast {brightness}x{contrast}  {output_file}
output_file = {0}_JP2.jp2
label = JPEG2000 Image

[derive.jpg.fits]
step.1.command = /var/local/fits-1.2.0/fits.sh -i {input_file} -xc -o {output_file}
step.1.join = or
step.2.command = /var/local/fits-1.2.0/fits.sh -i {input_file} -x -o {output_file}
output_file = {0}.xml
label = FITS Technical Metadata

[source.pdf]
derive_options = preview,thumbnail,pdf

[derive.pdf.preview]
command = convert -quality 75 {input_file} -flatten -resize 650x650 -brightness-contrast {brightness}x{contrast} {output_file}
output_file = {0}_PREVIEW.jpg
label = Preview Image

[derive.pdf.thumbnail]
command = convert -quality 75 {input_file} -flatten -resize 200x200 -brightness-contrast {brightness}x{contrast} {output_file}
output_file = {0}_TN.jpg
label = Thumbnail Image

[derive.pdf.pdf]
command = convert {input_file} -brightness-contrast {brightness}x{contrast} {output_file}
output_file = {0}_NEW.pdf
label = New PDF

[source.wav]
derive_options = mp3,json,waveform

[derive.wav.mp3]
step.1.command = ffmpeg -y -i {input_file} {output_file} 
step.1.join = or
step.2.command = ffmpeg -y -i {input_file} -codec:a libmp3lame -b:a 320k {output_file}
output_file = {0}.mp3
label = MP3 Audio

[derive.wav.waveform]
command = python /usr/local/repo_scripts/create_waveform.py -i {input_file} -o {output_file}
output_file = {0}.png
label = Waveform Image

[derive.wav.json]
command = audiowaveform -i {input_file} --pixels-per-second 5 -b 8 -o {output_file}
output_file = {0}.json
label = JSON Audio Data
